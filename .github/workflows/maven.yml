#
#name: Java CI with Maven
#
#on:
#  push:
#    branches: [ "master" ]
#  pull_request:
#    branches: [ "master" ]
#
#jobs:
#  build:
#
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v3
#    - name: Set up JDK 17
#      uses: actions/setup-java@v3
#      with:
#        java-version: '17'
#        distribution: 'temurin'
#        cache: maven
##    - name: Build with Maven
##      run: mvn -B package --file pom.xml
#
#    - name: Deploy to EC2
#      uses: appleboy/ssh-action@master
#      with:
#        host: ${{ secrets.SSH_HOST }}
#        username: ${{ secrets.SSH_USERNAME }}
#        key: ${{ secrets.SSH_PRIVATE_KEY }}
#        script: |
#          cd backend/cwift-marketplace-backend
#          git pull origin master
#          nohup ./mvnw spring-boot:run &

name: Deploy Nalmart backend  # Name of the workflow

on:
  push:  # Trigger the workflow on push events
    branches:
      - master  # Execute the workflow when changes are pushed to the main branch

jobs:
  build-and-deploy:  # Define a job named 'build-and-deploy'
    runs-on: ubuntu-latest  # Run the job on an Ubuntu environment

    steps:  # Define the steps of the job
      - name: Checkout code  # Checkout the code from the repository
        uses: actions/checkout@v2

      - name: Set up JDK 17 #Setup jdk 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx  # Set up Docker Buildx for multi-platform builds
        uses: docker/setup-buildx-action@v2

#      - name: Build Docker image  # Build the Docker image for the Spring Boot app
#        run: docker build -t nalmart-server-001 .
      - name: Dashboard to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

#      - name: Log in to Docker Hub  # Log in to Docker Hub using credentials
#        run: echo ${{ secrets.DOCKER_HUB_TOKEN }} | docker login --username ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

#      - name: Push Docker image to Docker Hub  # Push the Docker image to Docker Hub
#        run: docker push nalmart-server-001

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: nalmart-server-001:latest

      - name: SSH into VPS and deploy  # SSH into the VPS and deploy the application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}  # VPS host address
          username: ${{ secrets.SSH_USERNAME }}  # Username to SSH into the VPS
          key: ${{ secrets.SSH_PRIVATE_KEY }}  # SSH private key for authentication
          script: |  # Script to execute on the remote server
            docker pull nalmart-server-001  # Pull the latest Docker image
            docker stop springboot-app || true  # Stop the running container if exists
            docker rm springboot-app || true  # Remove the container if exists
            docker run -d --name springboot-app -p 8080:8080 nalmart-server-001  # Run a new container with the updated image
